[{"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/index.js":"1","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/App.js":"2","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/config.js":"3","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/Map.js":"4","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/Table.js":"5","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/InfoBox.js":"6","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/LineGraph.js":"7"},{"size":412,"mtime":1608411452618,"results":"8","hashOfConfig":"9"},{"size":4234,"mtime":1608789250854,"results":"10","hashOfConfig":"9"},{"size":1677,"mtime":1608703225441,"results":"11","hashOfConfig":"9"},{"size":577,"mtime":1608487901706,"results":"12","hashOfConfig":"9"},{"size":397,"mtime":1608503677111,"results":"13","hashOfConfig":"9"},{"size":777,"mtime":1608505683272,"results":"14","hashOfConfig":"9"},{"size":2375,"mtime":1608503059141,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"12ktnlr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/index.js",[],["32","33"],"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/App.js",[],"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/config.js",[],"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/Map.js",[],"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/Table.js",[],"/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/InfoBox.js",["34","35"],"import React, { useState, useEffect } from 'react';\nimport {Card, CardContent, Typography} from \"@material-ui/core\"\nimport '../InfoBox.css'\n\nconst InfoBox = ({ title, cases, total, active, isRed, ...props}) => {\n  return (\n    \n      <Card className={`infoBox ${active && \"infoBox--selected\"}  ${isRed && 'infoBox--red'}`}\n      onClick = {props.onClick}>\n        <CardContent>\n          <Typography className=\"infoBox__title\" color=\"textSecondary\">\n            {title}\n          </Typography>\n\n          <h2 className={`infoBox__cases ${!isRed && 'green'}`}>Today: {cases}</h2>\n          <Typography className=\"infoBox__total\" color =\"textSecondary\">\n            Total: {total}\n          </Typography>\n        </CardContent>\n      </Card>\n    \n  );\n}\n\nexport default InfoBox;\n","/Users/cirrusmokhtari/Desktop/selfcoding/covid-tracker/covid/src/Components/LineGraph.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"40","severity":1,"message":"44","line":1,"column":27,"nodeType":"42","messageId":"43","endLine":1,"endColumn":36},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]